[{"title":"Creating AWS Lambda environment variables from AWS Secrets Manager | AWS Compute Blog","intro":"This solution provides a way to convert information from Secrets Manager into Lambda environment variables. By following this approach, you can centralize the management of information through Secrets Manager, instead of at the function level.","author":"James Beswick","date":"Oct 28, 2021","link":"https://aws.amazon.com/blogs/compute/creating-aws-lambda-environmental-variables-from-aws-secrets-manager/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/28/envvar1.png","tags":["AWS Lambda","AWS Secrets Manager","Serverless","contributed","serverless"]},{"title":"Identifying optimal locations for flexible workloads with Spot placement score | AWS Compute Blog","intro":"This post is written by Jessie Xie, Solutions Architect for EC2 Spot, and Peter Manastyrny, Senior Product Manager for EC2 Auto Scaling and EC2 Fleet. Amazon EC2 Spot Instances let you run flexible, fault-tolerant, or stateless applications in the AWS Cloud at up to a 90% discount from On-Demand prices. Since we introduced Spot Instances […]","author":"Pranaya Anshu","date":"Oct 27, 2021","link":"https://aws.amazon.com/blogs/compute/identifying-optimal-locations-for-flexible-workloads-with-spot-placement-score/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/26/SPS_screenshot_1-926x630.png","tags":["Amazon EC2","Compute","Amazon EC2 Spot","Amazon EC2 Spot Instances"]},{"title":"Accelerating serverless development with AWS SAM Accelerate | AWS Compute Blog","intro":"Building a serverless application changes the way developers think about testing their code. Previously, developers would emulate the complete infrastructure locally and only commit code ready for testing. However, with serverless, local emulation can be more complex. In this post, I show you how to bypass most local emulation by testing serverless applications in the […]","author":"Eric Johnson","date":"Oct 27, 2021","link":"https://aws.amazon.com/blogs/compute/accelerating-serverless-development-with-aws-sam-accelerate/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/26/main-1-1260x500.png","tags":["AWS Serverless Application Model","Serverless","contributed","serverless"]},{"title":"Use Amazon EC2 for cost-efficient cloud gaming with pay-as-you-go pricing | AWS Compute Blog","intro":"This post is written by Markus Ziller, Solutions Architect Since AWS launched in 2006, cloud computing disrupted traditional IT operations by providing a more cost-efficient, scalable, and secure alternative to owning hardware and data centers. Similarly, cloud gaming today enables gamers to play video games with pay-as-you go pricing. This removes the need of high […]","author":"Emma White","date":"Oct 27, 2021","link":"https://aws.amazon.com/blogs/compute/use-amazon-ec2-for-cost-efficient-cloud-gaming-with-pay-as-you-go-pricing/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/22/ec2blog139.1-719x630.png","tags":["Technical How-to"]},{"title":"Monitoring and tuning federated GraphQL performance on AWS Lambda | AWS Compute Blog","intro":"There are multiple factors to consider when tuning a federated GQL system. You must be aware of trade-offs when deciding on factors like the runtime environment of Lambda functions. An extensive testing strategy can help you scale systems and narrow down issues quickly. Well-defined testing can also keep pipelines clean of false-positive blockages.","author":"James Beswick","date":"Oct 26, 2021","link":"https://aws.amazon.com/blogs/compute/monitoring-and-tuning-federated-graphql-performance-on-aws-lambda/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/12/graphql6.png","tags":["Amazon CloudWatch","AWS Lambda","AWS X-Ray","Serverless","contributed","serverless"]},{"title":"Building a difference checker with Amazon S3 and AWS Lambda | AWS Compute Blog","intro":"This blog post shows how to create a scalable difference checking tool for objects stored in S3 buckets. The Lambda function is invoked when S3 writes new versions of an object to the bucket. This example also shows how to remove earlier versions of object and define a set number of versions to retain.","author":"James Beswick","date":"Oct 25, 2021","link":"https://aws.amazon.com/blogs/compute/building-a-difference-checker-with-amazon-s3-and-aws-lambda/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/21/diff1.png","tags":["Amazon Simple Storage Service (S3)","AWS Lambda","Serverless","serverless"]},{"title":"Creating AWS Serverless batch processing architectures | AWS Compute Blog","intro":"This blog post shows how to use Step Functions’ features and integrations to orchestrate a batch processing solution. You use two Steps Functions workflows to implement batch processing, with one workflow splitting the original file and a second workflow processing each chunk file.","author":"James Beswick","date":"Oct 21, 2021","link":"https://aws.amazon.com/blogs/compute/creating-aws-serverless-batch-processing-architectures/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/27/batch3.png","tags":["AWS Step Functions","Serverless","contributed","serverless"]},{"title":"Amazon EC2 Auto Scaling will no longer add support for new EC2 features to Launch Configurations | AWS Compute Blog","intro":"This post is written by Scott Horsfield, Principal Solutions Architect, EC2 Scalability and Surabhi Agarwal, Sr. Product Manager, EC2. In 2010, AWS released launch configurations as a way to define the parameters of instances launched by EC2 Auto Scaling groups. In 2017, AWS released launch templates, the successor of launch configurations, as a way to streamline […]","author":"Pranaya Anshu","date":"Oct 20, 2021","link":"https://aws.amazon.com/blogs/compute/amazon-ec2-auto-scaling-will-no-longer-add-support-for-new-ec2-features-to-launch-configurations/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/19/LaunchTemplate-1212x630.png","tags":["Amazon EC2","Auto Scaling","Compute","Amazon EC2 Auto Scaling","Amazon EC2 Spot","Amazon EC2 Spot Instances"]},{"title":"Operating serverless at scale: Keeping control of resources – Part 3 | AWS Compute Blog","intro":"This post describes guardrails that you can set up in your accounts or across the organization to keep control over deployed resources. These guardrails can be more or less restrictive according to your requirements.","author":"James Beswick","date":"Oct 19, 2021","link":"https://aws.amazon.com/blogs/compute/operating-serverless-at-scale-keeping-control-of-resources-part-3/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/08/govern-3-1-752x630.png","tags":["AWS Config","AWS Lambda","Serverless","contributed","serverless"]},{"title":"Building dynamic Amazon SNS subscriptions for auto scaling container workloads  | AWS Compute Blog","intro":"This blog shows an event driven approach to handling dynamic SNS subscription requirements. It relies on the ECS service events to trigger appropriate Lambda functions. These create the subscription queue, subscribe it to a topic, and delete it once the container instance is terminated.","author":"James Beswick","date":"Oct 18, 2021","link":"https://aws.amazon.com/blogs/compute/building-dynamic-amazon-sns-subscriptions-for-auto-scaling-container-workloads/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/08/container1.png","tags":["Amazon Elastic Container Service","Amazon EventBridge","Amazon Simple Notification Service (SNS)","Serverless","contributed","serverless"]},{"title":"Visualizing AWS Step Functions workflows from the AWS Batch console | AWS Compute Blog","intro":"This post written by Dhiraj Mahapatro, Senior Specialist SA, Serverless. AWS Step Functions is a low-code visual workflow service used to orchestrate AWS services, automate business processes, and build serverless applications. Step Functions workflows manage failures, retries, parallelization, service integrations, and observability so builders can focus on business logic. AWS Batch is one of the […]","author":"Eric Johnson","date":"Oct 14, 2021","link":"https://aws.amazon.com/blogs/compute/visualizing-aws-step-functions-workflows-from-the-aws-batch-console/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/13/Picture1-5.png","tags":["AWS Batch","AWS Lambda","AWS Step Functions","Serverless","contributed","serverless"]},{"title":"Accepting API keys as a query string in Amazon API Gateway | AWS Compute Blog","intro":"This post was written by Ronan Prenty, Sr. Solutions Architect and Zac Burns, Cloud Support Engineer & API Gateway SME Amazon API Gateway is a fully managed service that makes it easier for developers to create, publish, maintain, monitor, and secure APIs at any scale. APIs act as the front door to applications and allow […]","author":"Eric Johnson","date":"Oct 14, 2021","link":"https://aws.amazon.com/blogs/compute/accepting-api-keys-as-a-query-string-in-amazon-api-gateway/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/13/Picture1.png","tags":["Amazon API Gateway","AWS Lambda","Security","contributed","serverless"]},{"title":"Using JSONPath effectively in AWS Step Functions | AWS Compute Blog","intro":"JSONPath provides the flexibility to work on JSON objects and arrays inside the Step Functions states machine by reducing the amount of utility code. This post uses a sample application to highlight effective use of JSONPath and data filtering strategies that can be used in AWS Step Functions.","author":"James Beswick","date":"Oct 14, 2021","link":"https://aws.amazon.com/blogs/compute/using-jsonpath-effectively-in-aws-step-functions/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/07/jsonpath1.png","tags":["AWS Step Functions","Serverless","contributed","serverless"]},{"title":"Operating serverless at scale: Improving consistency – Part 2 | AWS Compute Blog","intro":"This post shows a number of solutions to create and share archetypes or layers across the company. With these archetypes, development teams can quickly bootstrap projects with company standards and best practices.","author":"James Beswick","date":"Oct 12, 2021","link":"https://aws.amazon.com/blogs/compute/operating-serverless-at-scale-improving-consistency-part-2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/28/govern5-949x630.png","tags":["AWS Lambda","AWS Serverless Application Model","Serverless","contributed","serverless"]},{"title":"Avoiding recursive invocation with Amazon S3 and AWS Lambda | AWS Compute Blog","intro":"It's best practice to store the output of the Lambda function in a different bucket or AWS resource than the source bucket. In cases where you need to store the processed object in the same bucket, I show three different designs to help minimize the risk of recursive invocations.","author":"James Beswick","date":"Oct 11, 2021","link":"https://aws.amazon.com/blogs/compute/avoiding-recursive-invocation-with-amazon-s3-and-aws-lambda/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/10/04/recursion-4.png","tags":["Amazon Simple Storage Service (S3)","AWS Lambda","Serverless","serverless"]},{"title":"Using Okta as an identity provider with Amazon MWAA | AWS Compute Blog","intro":"This blog post shows you how to integrate Amazon MWAA with Okta as your managed AWS SSO implementation. You can use this solution for your own use cases and enable Okta SSO and Amazon MWAA.","author":"James Beswick","date":"Oct 07, 2021","link":"https://aws.amazon.com/blogs/compute/using-okta-as-an-identity-provider-with-amazon-mwaa/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/24/okta2.png","tags":["Amazon Managed Workflows for Apache Airflow (Amazon MWAA)","Serverless","contributed","serverless"]},{"title":"Operating serverless at scale: Implementing governance – Part 1 | AWS Compute Blog","intro":"Having visibility on your AWS resources is the key to operating and growing successfully. In this first part of this series on serverless governance, I describe how you can get this visibility by using tags to organize and group your resources, and ease the search and management of related resources.","author":"James Beswick","date":"Oct 06, 2021","link":"https://aws.amazon.com/blogs/compute/operating-serverless-at-scale-implementing-governance-part-1/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/27/govern1-1148x630.png","tags":["AWS X-Ray","Serverless","contributed","serverless"]},{"title":"Building Modern Applications with Amazon EKS on Amazon Outposts | AWS Compute Blog","intro":"This post is written by Brad Kirby, Principal Outposts Specialist, and Chris Lunsford, Senior Outposts SA.  Customers are modernizing applications by deconstructing monolithic architectures and migrating application components into container–based, service-oriented, and microservices architectures. Modern applications improve scalability, reliability, and development efficiency by allowing services to be owned by smaller, more focused teams. This post […]","author":"Emma White","date":"Oct 04, 2021","link":"https://aws.amazon.com/blogs/compute/building-modern-applications-with-amazon-eks-on-amazon-outposts/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/21/outpostsblog1.png","tags":["AWS Outposts","Best Practices","Technical How-to","Amazon EKS"]},{"title":"Simplifying B2B integrations with AWS Step Functions Workflow Studio | AWS Compute Blog","intro":"This post shows an architecture to share your business data with your trading partners using API Gateway, AWS Transfer for SFTP, Lambda, and Step Functions. This architecture enables organizations to quickly on-board partners, build event-driven pipelines, and streamline business processes.","author":"James Beswick","date":"Oct 04, 2021","link":"https://aws.amazon.com/blogs/compute/simplifying-b2b-integrations-with-aws-step-functions-workflow-studio/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/24/workflow6.png","tags":["AWS Step Functions","Serverless","contributed","serverless"]},[{"title":"ICYMI: Serverless Q3 2021 | AWS Compute Blog","intro":"Welcome to the 15th edition of the AWS Serverless ICYMI (in case you missed it) quarterly recap. Every quarter, we share all of the most recent product launches, feature enhancements, blog posts, webinars, Twitch live streams, and other interesting things that you might have missed!","author":"James Beswick","date":"Oct 01, 2021","link":"https://aws.amazon.com/blogs/compute/icymi-serverless-q3-2021/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/27/icymi-q3-1.png","tags":["Amazon API Gateway","Amazon DynamoDB","Amazon EventBridge","AWS Amplify","AWS Lambda","AWS Step Functions","Graviton","Serverless","serverless"]},{"title":"Building an API poller with AWS Step Functions and AWS Lambda | AWS Compute Blog","intro":"This post shows how to use Step Functions, Lambda, EventBridge, S3, API Gateway HTTP APIs, and Amazon SQS to build a serverless API poller. I show how you can deploy a sample solution, process sample payload, and store it to S3.","author":"James Beswick","date":"Sep 29, 2021","link":"https://aws.amazon.com/blogs/compute/building-an-api-poller-with-aws-step-functions-and-aws-lambda/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/17/poller3.png","tags":["AWS Lambda","AWS Step Functions","Serverless","contributed","serverless"]},{"title":"Creating a serverless face blurring service for photos in Amazon S3 | AWS Compute Blog","intro":"A serverless face blurring service can provide a simpler way to process photos in workloads with large amounts of traffic. This post introduces an example application that blurs faces when images are saved in an S3 bucket. The S3 PutObject event invokes a Lambda function that uses Amazon Rekognition to detect faces and GraphicsMagick to process the images.","author":"James Beswick","date":"Sep 27, 2021","link":"https://aws.amazon.com/blogs/compute/creating-a-serverless-face-blurring-service-for-photos-in-amazon-s3/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/16/blur-2-556x630.png","tags":["Amazon Rekognition","Amazon Simple Queue Service (SQS)","Amazon Simple Storage Service (S3)","AWS Lambda","Serverless","serverless"]},{"title":"Managing federated schema with AWS Lambda and Amazon S3 | AWS Compute Blog","intro":"Schema Management is a non-trivial challenge in federated GQL systems. The highest risk to your system availability comes with the potential of introducing breaking schema change by one of the graphlets. Your system cannot serve any requests after that. There is the problem of the delayed feedback loop for the engineers working on schema changes and the impact of schema composition during runtime on the service latency.","author":"James Beswick","date":"Sep 22, 2021","link":"https://aws.amazon.com/blogs/compute/managing-federated-schema-with-aws-lambda-and-amazon-s3/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/16/graphql5.png","tags":["AWS Lambda","Serverless","Technical How-to","contributed","serverless"]},{"title":"Getting started with testing serverless applications | AWS Compute Blog","intro":"Testing is an essential step in the software development lifecycle. Through the different types of tests, you validate user experience, performance, and detect bugs in your code. Features should not be considered done until all of the corresponding tests are written. The distributed nature of serverless architectures separates your application logic from other concerns like […]","author":"Talia Nassi","date":"Sep 20, 2021","link":"https://aws.amazon.com/blogs/compute/getting-started-with-testing-serverless-applications/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/20/pic6.png","tags":["AWS Lambda","Events","Serverless","serverless"]},{"title":"Building federated GraphQL on AWS Lambda | AWS Compute Blog","intro":"A single, highly discoverable, and well-documented backend endpoint enabled our clients to experiment with the data available in the graph. We were able to clean up the backend API layer, introduce clear ownership boundaries, and give our client powerful tools to speed up their development cycle.","author":"James Beswick","date":"Sep 20, 2021","link":"https://aws.amazon.com/blogs/compute/building-federated-graphql-on-aws-lambda/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/16/graphql3.png.jpg","tags":["AWS Lambda","Serverless","Technical How-to","contributed","serverless"]},{"title":"Optimize costs by up to 70% with new Amazon T3 Dedicated Hosts | AWS Compute Blog","intro":"This post is written by Andy Ward, Senior Specialist Solutions Architect, and Yogi Barot, Senior Specialist Solutions Architect. Customers have been taking advantage of Amazon Elastic Compute Cloud (Amazon EC2) Dedicated Hosts to enable them to use their eligible software licenses from vendors such as Microsoft and Oracle since the feature launched in 2015. Amazon EC2 Dedicated […]","author":"Emma White","date":"Sep 14, 2021","link":"https://aws.amazon.com/blogs/compute/optimize-costs-by-up-to-70-with-new-amazon-t3-dedicated-hosts/","image":"https://d2908q01vomqb2.cloudfront.net/827bfc458708f0b442009c9c9836f7e4b65557fb/2020/06/03/Blog-Post_thumbnail.png","tags":["Amazon EC2","Announcements","Windows on AWS"]},{"title":"Building a serverless GIF generator with AWS Lambda: Part 2 | AWS Compute Blog","intro":"Part 2 of this blog post expands on some of the advanced topics around scaling Lambda in parallelized workloads. It explains how the asynchronous invocation mode of Lambda scales and different ways to scale the worker Lambda function.","author":"James Beswick","date":"Sep 13, 2021","link":"https://aws.amazon.com/blogs/compute/building-a-serverless-gif-generator-with-aws-lambda-part-2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/30/s3-gif-1.png","tags":["Amazon EventBridge","Amazon Simple Storage Services (S3)","AWS Lambda","Serverless","Technical How-to","serverless"]},{"title":"Enabling parallel file systems in the cloud with Amazon EC2 (Part I: BeeGFS) | AWS Compute Blog","intro":"This post was authored by AWS Solutions Architects Ray Zaman, David Desroches, and Ameer Hakme. In this blog series, you will discover how to build and manage your own Parallel Virtual File System (PVFS) on AWS. In this post you will learn how to deploy the popular open source parallel file system, BeeGFS, using AWS […]","author":"Ben Peven","date":"Sep 10, 2021","link":"https://aws.amazon.com/blogs/compute/enabling-parallel-file-systems-in-the-cloud-with-amazon-ec2-part-i-beegfs/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/10/BeeGFS-architecture-864x630.png","tags":["Amazon EC2","Best Practices","Compute","Storage","BeeGFS","Parallel Virtual File System"]},{"title":"Building well-architected serverless applications: Optimizing application costs | AWS Compute Blog","intro":"This series of blog posts uses the AWS Well-Architected Tool with the Serverless Lens to help customers build and operate applications using best practices. In each post, I address the serverless-specific questions identified by the Serverless Lens along with the recommended best practices. See the introduction post for a table of contents and explanation of the example application. COST 1. How […]","author":"Julian Wood","date":"Sep 07, 2021","link":"https://aws.amazon.com/blogs/compute/building-well-architected-serverless-applications-optimizing-application-costs/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/07/CloudWatch-metrics-custom-graph.png","tags":["Amazon API Gateway","Amazon CloudWatch","Amazon DynamoDB","Amazon EC2 Container Registry","Amazon EventBridge","Amazon S3 Glacier","Amazon Simple Queue Service (SQS)","Amazon Simple Storage Services (S3)","AWS AppSync","AWS Lambda","AWS Serverless Application Repository","AWS Step Functions","AWS Systems Manager","Kinesis Data Streams","Serverless","serverless","well-architected"]},{"title":"Building a serverless distributed application using a saga orchestration pattern | AWS Compute Blog","intro":"This post showed how to implement the saga orchestration pattern using API Gateway, Step Functions, Lambda, DynamoDB, and .NET Core 3.1. This can help maintain data integrity in distributed transactions across multiple services. Step Functions makes it easier to implement the orchestration in the saga pattern.","author":"James Beswick","date":"Sep 02, 2021","link":"https://aws.amazon.com/blogs/compute/building-a-serverless-distributed-application-using-a-saga-orchestration-pattern/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/26/image041.png","tags":["Serverless","Technical How-to","contributed","serverless"]},{"title":"Building well-architected serverless applications: Optimizing application performance – part 3 | AWS Compute Blog","intro":"September 8, 2021: Amazon Elasticsearch Service has been renamed to Amazon OpenSearch Service. See details. This series of blog posts uses the AWS Well-Architected Tool with the Serverless Lens to help customers build and operate applications using best practices. In each post, I address the serverless-specific questions identified by the Serverless Lens along with the recommended best practices. See […]","author":"Julian Wood","date":"Aug 31, 2021","link":"https://aws.amazon.com/blogs/compute/building-well-architected-serverless-applications-optimizing-application-performance-part-3/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/17/API-Gateway-caching.png","tags":["Amazon API Gateway","Amazon CloudFront","Amazon DynamoDB","Amazon DynamoDB Accelerator (DAX)","Amazon OpenSearch Service (successor to Amazon Elasticsearch Service)","AWS AppSync","AWS Batch","Kinesis Data Firehose","Serverless","serverless","well-architected"]},{"title":"Increasing performance of Java AWS Lambda functions using tiered compilation | AWS Compute Blog","intro":"Tiered compilation stopping at level 1 reduces the time the JVM spends optimizing and profiling your code. This could help reduce start up times for Java applications that require fast responses, where the workload doesn’t meet the requirements to benefit from profiling.","author":"James Beswick","date":"Aug 31, 2021","link":"https://aws.amazon.com/blogs/compute/increasing-performance-of-java-aws-lambda-functions-using-tiered-compilation/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/24/java-4.png","tags":["AWS Lambda","Serverless","contributed","serverless"]},{"title":"Building a serverless GIF generator with AWS Lambda: Part 1 | AWS Compute Blog","intro":"Many video streaming services show GIF animations in the frontend when users fast forward and rewind throughout a video. This helps customers see a preview and makes the user interface more intuitive. Generating these GIF files is a compute-intensive operation that becomes more challenging to scale when there are many videos. Over a typical 2-hour […]","author":"James Beswick","date":"Aug 30, 2021","link":"https://aws.amazon.com/blogs/compute/building-a-serverless-gif-generator-with-aws-lambda-part-1/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/23/gif-1-509x630.png","tags":["AWS Lambda","AWS Serverless Application Model","Serverless","Technical How-to","serverless"]},{"title":"Sending mobile push notifications and managing device tokens with serverless applications | AWS Compute Blog","intro":"This blog shows how to deploy a serverless solution for validating and managing SNS platform endpoints and tokens. To publish push notifications successfully, use SNS to check the endpoint attribute and ensure it is mapped to the correct token and the endpoint is enabled.","author":"James Beswick","date":"Aug 26, 2021","link":"https://aws.amazon.com/blogs/compute/sending-mobile-push-notifications-and-managing-device-tokens-with-serverless-application/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/23/push-1.png","tags":["Amazon Simple Notification Service (SNS)","AWS Lambda","Serverless","Technical How-to","contributed","serverless"]},{"title":"15 years of silicon innovation with Amazon EC2 | AWS Compute Blog","intro":"The Graviton Hackathon is now available to developers globally to build and migrate apps to run on AWS Graviton2 This week we are celebrating 15 years of Amazon EC2 live on Twitch August 23rd – 24th with keynotes and sessions from AWS leaders and experts. You can watch all the sessions on-demand later this week to […]","author":"Neelay Thaker","date":"Aug 25, 2021","link":"https://aws.amazon.com/blogs/compute/15-years-of-silicon-innovation-with-amazon-ec2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/23/Artboard-37.png","tags":["Amazon EC2","AWS Graviton"]},{"title":"Building well-architected serverless applications: Optimizing application performance – part 2 | AWS Compute Blog","intro":"This series of blog posts uses the AWS Well-Architected Tool with the Serverless Lens to help customers build and operate applications using best practices. In each post, I address the serverless-specific questions identified by the Serverless Lens along with the recommended best practices. See the introduction post for a table of contents and explanation of the example application. PERF 1. Optimizing […]","author":"Julian Wood","date":"Aug 24, 2021","link":"https://aws.amazon.com/blogs/compute/building-well-architected-serverless-applications-optimizing-application-performance-part-2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/17/Example-asynchronous-processing.png","tags":["Amazon API Gateway","Amazon CloudFront","Amazon DynamoDB","Amazon Simple Queue Service (SQS)","Amazon VPC","AWS Lambda","AWS Step Functions","Kinesis Data Streams","Serverless","serverless","well-architected"]},{"title":"Adding resiliency to AWS CloudFormation custom resource deployments | AWS Compute Blog","intro":"This blog post demonstrates how to use SQS and Lambda to add resiliency to CloudFormation custom resources deployments. This solution can be customized for use cases where CloudFormation stacks have a dependency on a custom resource.","author":"James Beswick","date":"Aug 23, 2021","link":"https://aws.amazon.com/blogs/compute/adding-resiliency-to-aws-cloudformation-custom-resource-deployments/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/20/custom-resource1.png","tags":["Amazon Simple Queue Service (SQS)","AWS CloudFormation","AWS Lambda","Serverless","contributed","serverless"]},[{"title":"How to authenticate private container registries using AWS Batch | AWS Compute Blog","intro":"This post was contributed by Clayton Thomas, Solutions Architect, AWS WW Public Sector SLG Govtech. Many AWS Batch users choose to store and consume their AWS Batch job container images on AWS using Amazon Elastic Container Registries (ECR). AWS Batch and Amazon Elastic Container Service (ECS) natively support pulling from Amazon ECR without any extra […]","author":"Ben Peven","date":"Aug 20, 2021","link":"https://aws.amazon.com/blogs/compute/how-to-authenticate-private-container-registries-using-aws-batch/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/20/High-level-diagram-showing-event-flow.jpg","tags":["Amazon EC2 Container Registry","Amazon Elastic Container Service","AWS Batch","Containers","Technical How-to","Amazon EC2","Amazon ECS"]},{"title":"How to run massively multiplayer games with EC2 Spot using Aurora Serverless | AWS Compute Blog","intro":"This post is written by Yahav Biran, Principal Solutions Architect, and Pritam Pal, Sr. EC2 Spot Specialist SA Massively multiplayer online (MMO) game servers must dynamically scale their compute and storage to create a world-scale persistence simulation with millions of dynamic objects, such as complex AR/VR synthetic environments that match real-world fidelity. The Elastic Kubernetes […]","author":"Emma White","date":"Aug 18, 2021","link":"https://aws.amazon.com/blogs/compute/how-to-run-massively-multiplayer-games-with-ec2-spot-using-aurora-serverless/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/16/minecraft.png","tags":["Best Practices","Compute","Technical How-to","Amazon EC2 Spot"]},{"title":"Building well-architected serverless applications: Optimizing application performance – part 1 | AWS Compute Blog","intro":"This series of blog posts uses the AWS Well-Architected Tool with the Serverless Lens to help customers build and operate applications using best practices. In each post, I address the serverless-specific questions identified by the Serverless Lens along with the recommended best practices. See the introduction post for a table of contents and explanation of the example application. PERF 1. Optimizing […]","author":"Julian Wood","date":"Aug 17, 2021","link":"https://aws.amazon.com/blogs/compute/building-well-architected-serverless-applications-optimizing-application-performance-part-1/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/17/Lambda-function-cold-and-warm-starts.png","tags":["Amazon CloudWatch","Amazon DynamoDB","Amazon RDS","AWS Lambda","AWS X-Ray","Serverless","serverless","well-architected"]},{"title":"Configuring CORS on Amazon API Gateway APIs | AWS Compute Blog","intro":"Configuring cross-origin resource sharing (CORS) settings for a backend server is a typical challenge that developers face when building web applications. CORS is a layer of security enforced by modern browsers and is required when the client domain does not match the server domain. The complexity of CORS often leads developers to abandon it entirely […]","author":"Eric Johnson","date":"Aug 17, 2021","link":"https://aws.amazon.com/blogs/compute/configuring-cors-on-amazon-api-gateway-apis/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/16/Screen-Shot-2021-08-16-at-1.23.51-PM.png","tags":["Amazon API Gateway","AWS Serverless Application Model","Serverless","serverless"]},{"title":"Python 3.9 runtime now available in AWS Lambda | AWS Compute Blog","intro":"You can now create new functions or upgrade existing Python functions to Python 3.9. Lambda’s support of the Python 3.9 runtime enables you to take advantage of improved performance and new features in this version. Additionally, the Lambda service now runs the __init_.py code before the handler, supports TLS 1.3, and provides enhanced logging for errors.","author":"James Beswick","date":"Aug 16, 2021","link":"https://aws.amazon.com/blogs/compute/python-3-9-runtime-now-available-in-aws-lambda/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/05/python39-1-851x630.png","tags":["Announcements","AWS Lambda","Serverless","serverless"]},{"title":"Authenticating and authorizing Amazon MQ users with Lightweight Directory Access Protocol | AWS Compute Blog","intro":"This post is written by Dominic Gagné and Mithun Mallick. Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that simplifies setting up and operating message brokers in the AWS Cloud. Integrating an Amazon MQ broker with a Lightweight Directory Access Protocol (LDAP) server allows you to manage credentials and permissions for […]","author":"Talia Nassi","date":"Aug 11, 2021","link":"https://aws.amazon.com/blogs/compute/authenticating-and-authorizing-amazon-mq-users-with-lightweight-directory-access-protocol/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/06/blog5.png","tags":["Amazon MQ","Serverless","contributed","serverless"]},{"title":"Understanding VPC links in Amazon API Gateway private integrations | AWS Compute Blog","intro":"This post is written by Jose Eduardo Montilla Lugo, Security Consultant, AWS. A VPC link is a resource in Amazon API Gateway that allows for connecting API routes to private resources inside a VPC. A VPC link acts like any other integration endpoint for an API and is an abstraction layer on top of other […]","author":"Eric Johnson","date":"Aug 10, 2021","link":"https://aws.amazon.com/blogs/compute/understanding-vpc-links-in-amazon-api-gateway-private-integrations/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/10/Screen-Shot-2021-08-10-at-1.35.25-PM-1260x551.png","tags":["Amazon API Gateway","Networking & Content Delivery","Security","Serverless","contributed","serverless"]},{"title":"Building well-architected serverless applications: Building in resiliency – part 2 | AWS Compute Blog","intro":"This series of blog posts uses the AWS Well-Architected Tool with the Serverless Lens to help customers build and operate applications using best practices. In each post, I address the serverless-specific questions identified by the Serverless Lens along with the recommended best practices. See the introduction post for a table of contents and explanation of the example application. Reliability question REL2: […]","author":"Julian Wood","date":"Aug 10, 2021","link":"https://aws.amazon.com/blogs/compute/building-well-architected-serverless-applications-building-in-resiliency-part-2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/02/Service-Quotas-dashboard-861x630.png","tags":["Amazon API Gateway","Amazon CloudWatch","Amazon Cognito","Amazon DynamoDB","Amazon EventBridge","Amazon Simple Email Service (SES)","Amazon Simple Notification Service (SNS)","Amazon Simple Queue Service (SQS)","Amazon Simple Storage Services (S3)","AWS AppSync","AWS Lambda","AWS Step Functions","AWS Well-Architected Framework","Kinesis Data Streams","Serverless","serverless","well-architected"]},{"title":"Building well-architected serverless applications: Building in resiliency – part 1 | AWS Compute Blog","intro":"This series of blog posts uses the AWS Well-Architected Tool with the Serverless Lens to help customers build and operate applications using best practices. In each post, I address the serverless-specific questions identified by the Serverless Lens along with the recommended best practices. See the introduction post for a table of contents and explanation of the example application. Reliability question REL2: […]","author":"Julian Wood","date":"Aug 03, 2021","link":"https://aws.amazon.com/blogs/compute/building-well-architected-serverless-applications-building-in-resiliency-part-1/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/02/Exponential-backoff-and-jitter-928x630.png","tags":["Amazon DynamoDB","Amazon EventBridge","Amazon Simple Notification Service (SNS)","Amazon Simple Queue Service (SQS)","AWS CLI","AWS Lambda","AWS Step Functions","AWS Well-Architected Framework","Kinesis Data Streams","Serverless","serverless","well-architected"]},{"title":"Understanding Amazon Machine Images for Red Hat Enterprise Linux with Microsoft SQL Server | AWS Compute Blog","intro":"This post is written by Kumar Abhinav, Sr. Product Manager EC2, and David Duncan, Principal Solution Architect.  Customers now have access to AWS license-included Amazon Machine Images (AMI) for hosting their SQL Server workloads with Red Hat Enterprise Linux (RHEL). With these AMIs, customers can easily build highly available, reliable, and performant Microsoft SQL Server […]","author":"Emma White","date":"Jul 30, 2021","link":"https://aws.amazon.com/blogs/compute/understanding-amazon-machine-images-for-red-hat-enterprise-linux-with-microsoft-sql-server/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/15/RHEL2.png","tags":["Amazon EC2","Announcements","Best Practices","Red Hat","Red Hat Enterprise Linux"]},{"title":"How to quickly setup an experimental environment to run containers on x86 and AWS Graviton2 based Amazon EC2 instances | AWS Compute Blog","intro":"This post is written by Kevin Jung, a Solution Architect with Global Accounts at Amazon Web Services. AWS Graviton2 processors are custom designed by AWS using 64-bit Arm Neoverse cores. AWS offers the AWS Graviton2 processor in five new instance types – M6g, T4g, C6g, R6g, and X2gd. These instances are 20% lower cost and […]","author":"Emma White","date":"Jul 29, 2021","link":"https://aws.amazon.com/blogs/compute/how-to-quickly-setup-an-experimental-environment-to-run-containers-on-x86-and-aws-graviton2-based-amazon-ec2-instances-effort-to-port-a-container-based-application-from-x86-to-graviton2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/29/graviton1.png","tags":["Technical How-to","Amazon EC2","AWS Cloud9","AWS Graviton"]},{"title":"Building a serverless multiplayer game that scales: Part 2 | AWS Compute Blog","intro":"This post shows how you can add scaling support for a game via automation. The example uses Amazon Rekognition to check images for unacceptable content and uses asynchronous architecture patterns with Step Functions and HTTP WebPush.","author":"James Beswick","date":"Jul 29, 2021","link":"https://aws.amazon.com/blogs/compute/building-a-serverless-multiplayer-game-that-scales-part-2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/21/game-1-598x630.png","tags":["Amazon EventBridge","Amazon Rekognition","Amazon Simple Storage Services (S3)","AWS Lambda","AWS Step Functions","Serverless","contributed","serverless"]},{"title":"Automating Amazon CloudWatch dashboards and alarms for Amazon Managed Workflows for Apache Airflow | AWS Compute Blog","intro":"This article shows a serverless example that automatically creates CloudWatch dashboards and alarms for all existing and new MWAA environments. With this example, you can achieve better observability for your MWAA environments.","author":"James Beswick","date":"Jul 27, 2021","link":"https://aws.amazon.com/blogs/compute/automating-amazon-cloudwatch-dashboards-and-alarms-for-amazon-managed-workflows-for-apache-airflow/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/21/mwaa-4.jpg","tags":["Amazon Managed Workflows for Apache Airflow (Amazon MWAA)","Serverless","contributed","serverless"]},{"title":"Building well-architected serverless applications: Regulating inbound request rates – part 2 | AWS Compute Blog","intro":"This series of blog posts uses the AWS Well-Architected Tool with the Serverless Lens to help customers build and operate applications using best practices. In each post, I address the serverless-specific questions identified by the Serverless Lens along with the recommended best practices. See the introduction post for a table of contents and explanation of the example application. Reliability question REL1: […]","author":"Julian Wood","date":"Jul 27, 2021","link":"https://aws.amazon.com/blogs/compute/building-well-architected-serverless-applications-regulating-inbound-request-rates-part-2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/27/Lambda-concurrency.png","tags":["Amazon API Gateway","Amazon QuickSight","Amazon RDS","Amazon Simple Queue Service (SQS)","AWS Lambda","AWS Well-Architected Framework","Kinesis Data Streams","Serverless","serverless","well-architected"]},{"title":"Creating a single-table design with Amazon DynamoDB | AWS Compute Blog","intro":"This post looks at implementing common relational database patterns using DynamoDB. Instead of using multiple tables, the single-table design pattern can use adjacency lists to provide many-to-many relational functionality.","author":"James Beswick","date":"Jul 26, 2021","link":"https://aws.amazon.com/blogs/compute/creating-a-single-table-design-with-amazon-dynamodb/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/21/single-table-2.png","tags":["Amazon DynamoDB","Serverless","serverless"]},{"title":"Building well-architected serverless applications: Regulating inbound request rates – part 1 | AWS Compute Blog","intro":"This series of blog posts uses the AWS Well-Architected Tool with the Serverless Lens to help customers build and operate applications using best practices. In each post, I address the serverless-specific questions identified by the Serverless Lens along with the recommended best practices. See the introduction post for a table of contents and explanation of the example application. Reliability question REL1: […]","author":"Julian Wood","date":"Jul 22, 2021","link":"https://aws.amazon.com/blogs/compute/building-well-architected-serverless-applications-regulating-inbound-request-rates-part-1/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/22/API-Gateway-throttling.png","tags":["Amazon API Gateway","Amazon Cognito","Amazon DynamoDB","Amazon Simple Notification Service (SNS)","Amazon Simple Queue Service (SQS)","AWS Amplify","AWS CloudFormation","AWS Lambda","AWS Step Functions","AWS Well-Architected","Kinesis Data Streams","Serverless","serverless","well-architected"]},{"title":"Introducing AWS SAM Pipelines: Automatically generate deployment pipelines for serverless applications | AWS Compute Blog","intro":"Today, AWS announces the public preview of AWS SAM Pipelines, a new capability of AWS Serverless Application Model (AWS SAM) CLI. AWS SAM Pipelines makes it easier to create secure continuous integration and deployment (CI/CD) pipelines for your organizations preferred continuous integration and continuous deployment (CI/CD) system. This blog post shows how to use AWS […]","author":"Benjamin Smith","date":"Jul 21, 2021","link":"https://aws.amazon.com/blogs/compute/introducing-aws-sam-pipelines-automatically-generate-deployment-pipelines-for-serverless-applications/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/21/Screenshot-2021-07-19-at-12.54.55.png","tags":["AWS Serverless Application Model","Serverless","serverless"]},[{"title":"Building well-architected serverless applications: Implementing application workload security – part 2 | AWS Compute Blog","intro":"This series of blog posts uses the AWS Well-Architected Tool with the Serverless Lens to help customers build and operate applications using best practices. In each post, I address the serverless-specific questions identified by the Serverless Lens along with the recommended best practices. See the introduction post for a table of contents and explanation of the example application. Security question SEC3: […]","author":"Julian Wood","date":"Jul 13, 2021","link":"https://aws.amazon.com/blogs/compute/building-well-architected-serverless-applications-implementing-application-workload-security-part-2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/13/Secrets-Manager-password-change.png","tags":["Amazon EventBridge","Amazon RDS","AWS CloudFormation","AWS CloudTrail","AWS Identity and Access Management (IAM)","AWS Lambda","AWS Secrets Manager","Serverless","serverless","well-architected"]},{"title":"Coming soon: Expansion of AWS Lambda states to all functions | AWS Compute Blog","intro":"In November of 2019, we announced AWS Lambda function state attributes, a capability to track the current “state” of a function throughout its lifecycle. Since launch, states have been used in two primary use-cases. First, to move the blocking setup of VPC resources out of the path of function invocation. Second, to allow the Lambda […]","author":"Chris Munns","date":"Jul 12, 2021","link":"https://aws.amazon.com/blogs/compute/coming-soon-expansion-of-aws-lambda-states-to-all-functions/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/12/rollout-timeline-1260x246.png","tags":["AWS Lambda","Serverless","serverless"]},{"title":"Understanding data streaming concepts for serverless applications | AWS Compute Blog","intro":"In this post, I introduce some of the core streaming concepts for serverless applications. I explain some of the benefits of streaming architectures and how Kinesis works with producers and consumers. I compare different ways to ingest data, how streams are composed of shards, and how partition keys determine which shard is used. Finally, I explain the payload formats at the different stages of a streaming workload, how message ordering works with shards, and why idempotency is important to handle.","author":"James Beswick","date":"Jul 12, 2021","link":"https://aws.amazon.com/blogs/compute/understanding-data-streaming-concepts-for-serverless-applications/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/06/streaming-1.png","tags":["Amazon Kinesis","AWS Lambda","Kinesis Data Streams","Serverless","serverless"]},{"title":"Optimizing EC2 Workloads with Amazon CloudWatch | AWS Compute Blog","intro":"This post is written by David (Dudu) Twizer, Principal Solutions Architect, and Andy Ward, Senior AWS Solutions Architect – Microsoft Tech. In December 2020, AWS announced the availability of gp3, the next-generation General Purpose SSD volumes for Amazon Elastic Block Store (Amazon EBS), which allow customers to provision performance independent of storage capacity and provide […]","author":"Emma White","date":"Jul 09, 2021","link":"https://aws.amazon.com/blogs/compute/optimizing-ec2-workloads-with-amazon-cloudwatch/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/07/betterpic6.png","tags":["Best Practices","Technical How-to","Amazon CloudWatch","Amazon EC2"]},{"title":"Integrating Amazon API Gateway private endpoints with on-premises networks | AWS Compute Blog","intro":"This post was written by Ahmed ElHaw, Sr. Solutions Architect Using AWS Direct Connect or AWS Site-to-Site VPN, customers can establish a private virtual interface from their on-premises network directly to their Amazon Virtual Private Cloud (VPC). Hybrid networking enables customers to benefit from the scalability, elasticity, and ease of use of AWS services while […]","author":"Eric Johnson","date":"Jul 09, 2021","link":"https://aws.amazon.com/blogs/compute/integrating-amazon-api-gateway-private-endpoints-with-on-premises-networks/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/08/Screen-Shot-2021-07-08-at-2.06.19-PM-958x630.png","tags":["Amazon API Gateway","Networking & Content Delivery","Serverless","contributed","serverless"]},{"title":"Using serverless to load test Amazon API Gateway with authorization | AWS Compute Blog","intro":"This post was written by Ashish Mehra, Sr. Solutions Architect and Ramesh Chidirala, Solutions Architect Many customers design their applications to use Amazon API Gateway as the front door and load test their API endpoints before deploying to production. Customers want to simulate the actual usage scenario, including authentication and authorization. The load test ensures […]","author":"Eric Johnson","date":"Jul 08, 2021","link":"https://aws.amazon.com/blogs/compute/using-serverless-to-load-test-amazon-api-gateway-with-authorization/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/08/Screen-Shot-2021-07-08-at-12.21.23-PM-888x630.png","tags":["Amazon Cognito","AWS Step Functions","Serverless","contributed","serverless"]},{"title":"Developing evolutionary architecture with AWS Lambda | AWS Compute Blog","intro":"This post shows how you can evolve a workload using hexagonal architecture. It explains how to add new functionality, change underlying infrastructure, or port the code base between different compute solutions. The main characteristics enabling this are loose coupling and strong encapsulation.","author":"James Beswick","date":"Jul 08, 2021","link":"https://aws.amazon.com/blogs/compute/developing-evolutionary-architecture-with-aws-lambda/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/30/hex-1.png","tags":["Amazon DynamoDB","AWS Lambda","Serverless","Technical How-to","contributed","serverless"]},{"title":"Using Amazon MQ for RabbitMQ as an event source for Lambda | AWS Compute Blog","intro":"Amazon MQ for RabbitMQ is an AWS managed version of RabbitMQ. The service manages the provisioning, setup, and maintenance of RabbitMQ, reducing operational overhead for companies. Now, with Amazon MQ for RabbitMQ as an event source for AWS Lambda, you can process messages from the service. This allows you to integrate Amazon MQ for RabbitMQ […]","author":"Talia Nassi","date":"Jul 07, 2021","link":"https://aws.amazon.com/blogs/compute/using-amazon-mq-for-rabbitmq-as-an-event-source-for-lambda/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/01/2021-07-01_08-42-03-1041x630.png","tags":["Amazon MQ","AWS Lambda","AWS Serverless Application Model","How-To","Technical How-to","serverless"]},{"title":"Translating content dynamically by using Amazon S3 Object Lambda | AWS Compute Blog","intro":"This blog post shows how you can use S3 Object Lambda with Amazon Translate to simplify dynamic content translation by using a data driven approach. With user-provided data as arguments, you can dynamically transform content in S3 and generate a new object.","author":"James Beswick","date":"Jul 06, 2021","link":"https://aws.amazon.com/blogs/compute/translating-content-dynamically-by-using-amazon-s3-object-lambda/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/01/object-lambda-1.png","tags":["Amazon Simple Storage Services (S3)","AWS Lambda","Serverless","contributed","serverless"]},{"title":"Building well-architected serverless applications: Implementing application workload security – part 1 | AWS Compute Blog","intro":"This series of blog posts uses the AWS Well-Architected Tool with the Serverless Lens to help customers build and operate applications using best practices. In each post, I address the serverless-specific questions identified by the Serverless Lens along with the recommended best practices. See the introduction post for a table of contents and explanation of the example application. Security question SEC3: […]","author":"Julian Wood","date":"Jul 06, 2021","link":"https://aws.amazon.com/blogs/compute/building-well-architected-serverless-applications-implementing-application-workload-security-part-1/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/07/06/CVE-Python-search.png","tags":["Amazon API Gateway","Amazon EC2 Container Registry","AWS Lambda","AWS Serverless Application Model","AWS WAF","AWS Well-Architected Framework","AWS Well-Architected Tool","Serverless","serverless","well-architected"]},{"title":"ICYMI: Serverless Q2 2021 | AWS Compute Blog","intro":"A review of everything that happened in AWS Serverless in Q2 2021.","author":"James Beswick","date":"Jul 01, 2021","link":"https://aws.amazon.com/blogs/compute/icymi-serverless-q2-2021/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/30/icymi-q2-2-1120x630.png","tags":["Amazon EventBridge","Amazon Kinesis","Amazon Simple Notification Service (SNS)","AWS Amplify","AWS Lambda","AWS Serverless Application Model","AWS Step Functions","Serverless","serverless"]},{"title":"Implementing a LIFO task queue using AWS Lambda and Amazon DynamoDB | AWS Compute Blog","intro":"This post was written by Diggory Briercliffe, Senior IoT Architect. When implementing a task queue, you can use Amazon SQS standard or FIFO (First-In-First-Out) queue types. Both queue types give priority to tasks created earlier over tasks that are created later. However, there are use cases where you need a LIFO (Last-In-First-Out) queue. This post […]","author":"Eric Johnson","date":"Jun 29, 2021","link":"https://aws.amazon.com/blogs/compute/implementing-a-lifo-task-queue-using-aws-lambda-and-amazon-dynamodb/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/10/Picture1-5.png","tags":["Amazon DynamoDB","AWS Lambda","Serverless","contributed","serverless"]},{"title":"Introducing Native Support for Predictive Scaling with Amazon EC2 Auto Scaling | AWS Compute Blog","intro":"This post is written by Scott Horsfield, Principal Solutions Architect, EC2 Scalability and Ankur Sethi, Sr. Product Manager, EC2 Amazon EC2 Auto Scaling allows customers to realize the elasticity benefits of AWS by automatically launching and shutting down instances to match application demand. Today, we are excited to tell you about predictive scaling. It is a […]","author":"Emma White","date":"Jun 29, 2021","link":"https://aws.amazon.com/blogs/compute/introducing-native-support-for-predictive-scaling-with-amazon-ec2-auto-scaling/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/28/proactive1.png","tags":["Amazon EC2","Auto Scaling","Amazon EC2 Auto Scaling"]},{"title":"Hosting Hugging Face models on AWS Lambda for serverless inference | AWS Compute Blog","intro":"This post written by Eddie Pick, AWS Senior Solutions Architect – Startups and Scott Perry, AWS Senior Specialist Solutions Architect – AI/ML Hugging Face Transformers is a popular open-source project that provides pre-trained, natural language processing (NLP) models for a wide variety of use cases. Customers with minimal machine learning experience can use pre-trained models […]","author":"Chris Munns","date":"Jun 29, 2021","link":"https://aws.amazon.com/blogs/compute/hosting-hugging-face-models-on-aws-lambda/","image":"https://d2908q01vomqb2.cloudfront.net/827bfc458708f0b442009c9c9836f7e4b65557fb/2020/06/03/Blog-Post_thumbnail.png","tags":["AWS Lambda","Serverless","AWS CDK","machine learning","Python","serverless"]},{"title":"Building well-architected serverless applications: Managing application security boundaries – part 2 | AWS Compute Blog","intro":"This series uses the AWS Well-Architected Tool with the Serverless Lens to help customers build and operate applications using best practices. In each post, I address the nine serverless-specific questions identified by the Serverless Lens along with the recommended best practices. See the introduction post for a table of contents and explanation of the example application. Security question SEC2: How do […]","author":"Julian Wood","date":"Jun 29, 2021","link":"https://aws.amazon.com/blogs/compute/building-well-architected-serverless-applications-managing-application-security-boundaries-part-2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/23/IAM-last-used.png","tags":["Amazon API Gateway","Amazon DynamoDB","Amazon Simple Storage Services (S3)","AWS AppSync","AWS CloudTrail","AWS IAM Access Analyzer","AWS Identity and Access Management (IAM)","AWS Lambda","AWS Serverless Application Model","Serverless","serverless","well-architected"]},{"title":"Monitoring and troubleshooting serverless data analytics applications | AWS Compute Blog","intro":"In this post, I show how the existing settings in the Alleycat application are not sufficient for handling the expected amount of traffic. I walk through the metrics visualizations for Kinesis Data Streams, Lambda, and DynamoDB to find which quotas should be increased.","author":"James Beswick","date":"Jun 28, 2021","link":"https://aws.amazon.com/blogs/compute/monitoring-and-troubleshooting-serverless-data-analytics-applications/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/22/alleycat-5-2-679x630.png","tags":["Amazon CloudWatch","Amazon DynamoDB","AWS Lambda","Kinesis Data Streams","Serverless","Technical How-to","serverless"]},{"title":"Using GitHub Actions to deploy serverless applications | AWS Compute Blog","intro":"This post is written by Gopi Krishnamurthy, Senior Solutions Architect. Continuous integration and continuous deployment (CI/CD) is one of the major DevOps components. This allows you to build, test, and deploy your applications rapidly and reliably, while improving quality and reducing time to market. GitHub is an AWS Partner Network (APN) with the AWS DevOps […]","author":"Julian Wood","date":"Jun 24, 2021","link":"https://aws.amazon.com/blogs/compute/using-github-actions-to-deploy-serverless-applications/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/21/GitHub-Actions-progress2.png","tags":["Amazon API Gateway","AWS Lambda","AWS Serverless Application Model","Serverless","contributed","serverless"]},[{"title":"Deploying machine learning models with serverless templates | AWS Compute Blog","intro":"This post written by Sean Wilkinson, Machine Learning Specialist Solutions Architect, and Newton Jain, Senior Product Manager for Lambda After designing and training machine learning models, data scientists deploy the models so applications can use them. AWS Lambda is a compute service that lets you run code without provisioning or managing servers. Lambda’s pay-per-request billing, automatic […]","author":"Eric Johnson","date":"Jun 22, 2021","link":"https://aws.amazon.com/blogs/compute/deploying-machine-learning-models-with-serverless-templates/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/21/Screen-Shot-2021-06-21-at-10.22.07-AM-1260x356.png","tags":["Amazon Machine Learning","AWS Lambda","AWS Serverless Application Model","Serverless","serverless"]},{"title":"Building well-architected serverless applications: Managing application security boundaries – part 1 | AWS Compute Blog","intro":"This series of blog posts uses the AWS Well-Architected Tool with the Serverless Lens to help customers build and operate applications using best practices. In each post, I address the serverless-specific questions identified by the Serverless Lens along with the recommended best practices. See the introduction post for a table of contents and explanation of the example application. Security question SEC2: […]","author":"Julian Wood","date":"Jun 22, 2021","link":"https://aws.amazon.com/blogs/compute/building-well-architected-serverless-applications-managing-application-security-boundaries-part-1/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/22/Lambda-resource-policy-document.png","tags":["Amazon API Gateway","Amazon CloudWatch","Amazon DynamoDB","Amazon EventBridge","Amazon Simple Notification Service (SNS)","Amazon Simple Queue Service (SQS)","Amazon VPC","AWS AppSync","AWS Identity and Access Management (IAM)","AWS Lambda","AWS Serverless Application Model","AWS WAF","AWS Well-Architected Framework","AWS Well-Architected Tool","Serverless","serverless","well-architected"]},{"title":"Building leaderboard functionality with serverless data analytics | AWS Compute Blog","intro":"In this post, I explain the all-time leaderboard logic in the Alleycat application. This is an asynchronous, eventually consistent process that checks batching of incoming records for new personal records. This uses Kinesis Data Firehose to provide a zero-administration way to deliver and process large batches of records continuously.","author":"James Beswick","date":"Jun 21, 2021","link":"https://aws.amazon.com/blogs/compute/building-serverless-applications-with-streaming-data-part-4/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/14/alleycat-4-2.png","tags":["Amazon DynamoDB","AWS Lambda","Kinesis Data Streams","Serverless","Technical How-to","serverless"]},{"title":"Prototyping at speed with AWS Step Functions new Workflow Studio | AWS Compute Blog","intro":"AWS recently introduced Workflow Studio for AWS Step Functions. This is a new visual builder for creating Step Functions workflows in the AWS Management Console. This post shows how to use the Workflow Studio for rapid workflow prototyping. It also explains how to transition to local development, integrating the prototype with your infrastructure as code […]","author":"Benjamin Smith","date":"Jun 21, 2021","link":"https://aws.amazon.com/blogs/compute/prototyping-at-speed-with-aws-step-functions-new-workflow-studio/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/21/Screenshot-2021-06-21-at-15.37.20-1067x630.png","tags":["AWS Step Functions","Serverless","serverless"]},{"title":"Exploring serverless patterns for Amazon DynamoDB | AWS Compute Blog","intro":"Amazon DynamoDB is a fully managed, serverless NoSQL database. In this post, you learn about the different DynamoDB patterns used in serverless applications, and use the recently launched Serverless Patterns Collection to configure DynamoDB as an event source for AWS Lambda. Benefits of using DynamoDB as a serverless developer DynamoDB is a serverless service that automatically […]","author":"Talia Nassi","date":"Jun 16, 2021","link":"https://aws.amazon.com/blogs/compute/exploring-serverless-patterns-for-amazon-dynamodb/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/15/featured-image.png","tags":["Amazon CloudWatch","Amazon DynamoDB","AWS Serverless Application Model","Serverless","serverless"]},{"title":"Monitoring memory usage in Amazon Lightsail instance | AWS Compute Blog","intro":"This post is written by Sebastian Lee, Solution Architect, Startup Singapore. Amazon Lightsail is a great starting point for those looking to get started on AWS. Lightsail is ideal for startups, SMBs, and hobbyist developers because it simplifies the deployment of instances, databases, load-balancers, CDNs, and even containers. However, you cannot track metrics beyond  CPU […]","author":"Emma White","date":"Jun 14, 2021","link":"https://aws.amazon.com/blogs/compute/monitoring-memory-usage-lightsail-instance/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/10/cloudwatch-1.png","tags":["Amazon CloudWatch","Amazon Lightsail","Technical How-to","Monitoring"]},{"title":"Building serverless applications with streaming data: Part 3 | AWS Compute Blog","intro":"In this post, I explain the all-time leaderboard logic in the Alleycat application. This is an asynchronous, eventually consistent process that checks batching of incoming records for new personal records. This uses Kinesis Data Firehose to provide a zero-administration way to deliver and process large batches of records continuously.","author":"James Beswick","date":"Jun 14, 2021","link":"https://aws.amazon.com/blogs/compute/building-serverless-applications-with-streaming-data-part-3/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/09/alleycat-3-3.png","tags":["AWS Lambda","AWS Serverless Application Model","Kinesis Data Firehose","Kinesis Data Streams","Serverless","Technical How-to","serverless"]},{"title":"Getting started with serverless for developers part 5: Sandbox developer account | AWS Compute Blog","intro":"This is part 5 of the Getting started with serverless series. In part 4, you learn how the developer workflow for building serverless applications differs to a traditional developer workflow. You see how to test business logic locally before deploying to an AWS account. In this post, you learn how to secure and manage access […]","author":"Benjamin Smith","date":"Jun 14, 2021","link":"https://aws.amazon.com/blogs/compute/getting-started-with-serverless-for-developers-part-5-sandbox-developer-account/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/07/Screenshot-2021-06-07-at-14.28.29.png","tags":["AWS Identity and Access Management (IAM)","AWS Lambda","AWS Serverless Application Model","Serverless","serverless"]},{"title":"Announcing migration of the Java 8 runtime in AWS Lambda to Amazon Corretto | AWS Compute Blog","intro":"Beginning July 19, 2021, the Java 8 managed runtime in AWS Lambda will migrate from the current Open Java Development Kit (OpenJDK) implementation to the latest Amazon Corretto implementation.","author":"James Beswick","date":"Jun 14, 2021","link":"https://aws.amazon.com/blogs/compute/announcing-migration-of-the-java-8-runtime-in-aws-lambda-to-amazon-corretto/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/10/Arch_AWS-Lambda_64@5x.png","tags":["Amazon Corretto","Announcements","AWS Lambda","AWS Serverless Application Model","Java","Serverless","contributed","serverless"]},{"title":"Frictionless hosting of containerized ASP.NET web apps using Amazon Lightsail | AWS Compute Blog","intro":"This post is written by Fahad Mustafa, Cloud Application Architect, AWS Professional Services There are many ways to deploy ASP.NET web apps to AWS. Each with its own use cases and differing pricing models. But what if you have a small website and database that you must deploy rapidly, manage, and scale? What if you […]","author":"Emma White","date":"Jun 10, 2021","link":"https://aws.amazon.com/blogs/compute/frictionless-hosting-of-containerized-asp-net-web-apps-using-amazon-lightsail/","image":"https://d2908q01vomqb2.cloudfront.net/827bfc458708f0b442009c9c9836f7e4b65557fb/2020/06/03/Blog-Post_thumbnail.png","tags":["Amazon Lightsail","Best Practices","Compute","Technical How-to","ASP .NET","Databases","Lightsail Containers"]},{"title":"Building serverless applications with streaming data: Part 2 | AWS Compute Blog","intro":"This post focuses on ingesting data into Kinesis Data Streams. I explain the two approaches used by the Alleycat frontend and the simulator application and highlight other approaches that you can use. I show how messages are routed to shards using partition keys. Finally, I explore additional factors to consider when ingesting data, to improve efficiency and reduce cost.","author":"James Beswick","date":"Jun 07, 2021","link":"https://aws.amazon.com/blogs/compute/building-serverless-applications-with-streaming-data-part-2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/02/alleycat-2-1.png","tags":["AWS SDK for JavaScript in Node.js","Internet of Things","Kinesis Data Streams","Serverless","Technical How-to","serverless"]},{"title":"Using the EC2 Serial Console to access the Microsoft Server boot manager to fix and debug boot failures | AWS Compute Blog","intro":"This post is written by Pallavi Ravishankar a Senior Product Manager and Jason Nicholls an Enterprise Solutions Architect. Failure management is a key part of the reliability pillar within the AWS Well-Architected Framework. But things fail, and operating systems are no exception. An operating system update, application update, a misconfiguration, missing driver, or incorrect security […]","author":"Emma White","date":"Jun 07, 2021","link":"https://aws.amazon.com/blogs/compute/using-the-ec2-serial-console-to-access-the-microsoft-server-boot-manager-to-fix-and-debug-boot-failures/","image":"https://d2908q01vomqb2.cloudfront.net/827bfc458708f0b442009c9c9836f7e4b65557fb/2020/06/03/Blog-Post_thumbnail.png","tags":["Best Practices"]},{"title":"Getting Started with serverless for developers: Part 4 – Local developer workflow | AWS Compute Blog","intro":"This blog is part 4 of the “Getting started with serverless for developers” series, helping developers start building serverless applications from their IDE. Many “getting started” guides demonstrate how to build serverless applications from within the AWS Management Console. However, most developers spend the majority of their time building from within their local integrated development […]","author":"Benjamin Smith","date":"Jun 07, 2021","link":"https://aws.amazon.com/blogs/compute/getting-started-with-serverless-for-developers-part-4-local-developer-workflow/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/07/Screenshot-2021-06-07-at-14.21.58.png","tags":["AWS Lambda","AWS Serverless Application Model","Foundational (100)","Serverless","serverless"]},[{"title":"Using EC2 Serial Console to access the GRUB menu and recover from boot failures | AWS Compute Blog","intro":"This post is written by Pallavi Ravishankar a Senior Product Manager and Jason Nicholls an Enterprise Solutions Architect. Debugging and fixing infrastructure is one of the key responsibilities of system and network administrators. When an instance fails to start up on premises or can no longer connect to the network, an administrator can walk up […]","author":"Emma White","date":"Jun 03, 2021","link":"https://aws.amazon.com/blogs/compute/using-ec2-serial-console-to-access-the-grub-menu-and-recover-from-boot-failures/","image":"https://d2908q01vomqb2.cloudfront.net/827bfc458708f0b442009c9c9836f7e4b65557fb/2020/06/03/Blog-Post_thumbnail.png","tags":[]},{"title":"Setting up AWS Lambda with an Apache Kafka cluster within a VPC | AWS Compute Blog","intro":"Using resources such as NAT Gateways and VPC endpoints with PrivateLink, you can ensure that your data remains secure while also granting access to resources such as Lambda to help you create a Kafka consumer application. This post provides some tips to help you set up a Lambda function using Kafka as a trigger. It also explains various options available to send data securely.","author":"James Beswick","date":"Jun 02, 2021","link":"https://aws.amazon.com/blogs/compute/setting-up-aws-lambda-with-an-apache-kafka-cluster-within-a-vpc/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/01/msk6.png","tags":["Amazon Managed Streaming for Apache Kafka (Amazon MSK)","Amazon VPC","AWS Lambda","AWS PrivateLink","AWS Secrets Manager","Serverless","contributed","serverless"]},{"title":"Introducing the SMS sandbox for Amazon SNS | AWS Compute Blog","intro":"This post describes the SMS sandbox in SNS. It shows how you can configure the SMS sandbox features, quotas, and how you can move out of the sandbox. ","author":"James Beswick","date":"Jun 01, 2021","link":"https://aws.amazon.com/blogs/compute/introducing-the-sms-sandbox-for-amazon-sns/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/01/sns-sms4-1187x630.png","tags":["Amazon Simple Notification Service (SNS)","Serverless","contributed","serverless"]},{"title":"Provisioning and using 10DLC origination numbers with Amazon SNS | AWS Compute Blog","intro":"Effective June 1, 2021, US telecom providers require one of the following types of origination numbers be used for application-to-person (A2P) text messaging (SMS) to US destinations: Short codes 10-digit long codes (10DLC) Toll-free numbers An origination number is a numeric string that identifies the SMS message sender. This blog post explains how customers using […]","author":"Benjamin Smith","date":"Jun 01, 2021","link":"https://aws.amazon.com/blogs/compute/provisioning-and-using-10dlc-origination-numbers-with-amazon-sns/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/01/Screenshot-2021-05-24-at-23.41.54.png","tags":["Amazon Pinpoint","Amazon Simple Notification Service (SNS)","Messaging","Serverless","serverless"]},{"title":"Building serverless applications with streaming data: Part 1 | AWS Compute Blog","intro":"In this post, I introduce the Alleycat racing application for processing streaming data. I explain the virtual racing logic and provide an overview of the application architecture. I summarize the deployment process for the different parts of the solution and show how to test the frontend once the deployment is complete.","author":"James Beswick","date":"Jun 01, 2021","link":"https://aws.amazon.com/blogs/compute/building-serverless-applications-with-streaming-data-part-1/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/06/01/streaming1-664x630.png","tags":["AWS Lambda","AWS Serverless Application Model","Kinesis Data Firehose","Kinesis Data Streams","Serverless","Technical How-to","serverless"]},{"title":"Building Amazon Machine Images (AMIs) for EC2 Mac instances with Packer | AWS Compute Blog","intro":"This post is written by Joerg Woehrle, AWS Solutions Architect On November 30, 2020 AWS announced the availability of Amazon EC2 Mac instances. EC2 Mac instances are powered by the AWS Nitro System and built on Apple Mac mini computers. This blog post focuses on the specific best practices of building custom AMIs for EC2 […]","author":"Martin Yip","date":"May 27, 2021","link":"https://aws.amazon.com/blogs/compute/building-amazon-machine-images-amis-for-ec2-mac-instances-with-packer/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/20/Site-Merch_EC2-Mac_Editorial.png","tags":["Amazon EC2","Amazon EC2 Bare Metal","Compute","EC2 Mac","Packer"]},{"title":"Performance and functionality improvements for AWS Lambda extensions | AWS Compute Blog","intro":"AWS Lambda extensions are a new way to integrate Lambda more easily with your favorite monitoring, observability, security, and governance tools. With the general availability announcement, AWS is introducing performance and functionality improvements. The Lambda service now returns the response from the function as soon as the function code is complete without waiting for the […]","author":"Julian Wood","date":"May 24, 2021","link":"https://aws.amazon.com/blogs/compute/performance-and-functionality-improvements-for-aws-lambda-extensions/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/05/24/Updated-console-screenshot-1216x630.png","tags":["Amazon Elastic Container Service","Amazon Elastic Kubernetes Service","AWS Lambda","Serverless","serverless"]},{"title":"Building private cross-account APIs using Amazon API Gateway and AWS PrivateLink | AWS Compute Blog","intro":"This post is written by Brian Zambrano, Enterprise Solutions Architect and Srinivasa Atta, Sr. Technical Account Manager With microservice architectures, multiple teams within an organization often build different parts of an application. Different teams may own functionality for a given business segment. An effective pattern to support this is a centrally managed public API. This […]","author":"Julian Wood","date":"May 20, 2021","link":"https://aws.amazon.com/blogs/compute/building-private-cross-account-apis-using-amazon-api-gateway-and-aws-privatelink/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/05/20/1-solution-overview.png","tags":["Amazon API Gateway","Amazon EC2","Amazon EC2 Container Registry","Amazon Elastic Kubernetes Service","Amazon VPC","Auto Scaling","AWS Cloud Development Kit","AWS Fargate","AWS Lambda","AWS PrivateLink","contributed","serverless"]},{"title":"Using bus-to-bus event routing with Amazon EventBridge | AWS Compute Blog","intro":"Using Amazon EventBridge, you can now route events between different event buses in the same Region and same AWS account. Combined with the ability to route events cross-Region, this provides you with significant flexibility in routing events in your workloads. This blog post explains how to use event routing and walks through ways you can […]","author":"James Beswick","date":"May 19, 2021","link":"https://aws.amazon.com/blogs/compute/using-bus-to-bus-event-routing-with-amazon-eventbridge/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/05/18/bus-to-bus2.png","tags":["Amazon EventBridge","Serverless","serverless"]},[{"title":"Introducing the Amazon EventBridge service integration for AWS Step Functions | AWS Compute Blog","intro":"This post is courtesy of Stephen Liedig, Sr Serverless Specialist SA. AWS Step Functions now integrates with Amazon EventBridge to provide a simpler solution for producing events during a workflow. Step Functions allows you to build resilient serverless orchestration workflows with AWS services such as AWS Lambda, Amazon SNS, Amazon DynamoDB, and more. Step Functions […]","author":"Eric Johnson","date":"May 14, 2021","link":"https://aws.amazon.com/blogs/compute/introducing-the-amazon-eventbridge-service-integration-for-aws-step-functions/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/05/12/Screen-Shot-2021-05-12-at-3.49.19-PM-1095x630.png","tags":["Amazon EventBridge","AWS Step Functions","Serverless","serverless"]},{"title":"Unify your iOS mobile app CI/CD pipeline with Amazon EC2 Mac Instances | AWS Compute Blog","intro":"This post is written by Benjamin Meyer, Solutions Architect at AWS With Amazon EC2 Mac instances, AWS customers can run macOS workloads on AWS and benefit from the scale, elasticity, reliability, and experience of AWS. With EC2 Mac instances, it’s possible to bootstrap macOS machines in the cloud and use these for building, testing, and […]","author":"Martin Yip","date":"May 10, 2021","link":"https://aws.amazon.com/blogs/compute/unify-your-ios-mobile-app-ci-cd-pipeline-with-amazon-ec2-mac-instances-2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/20/Site-Merch_EC2-Mac_Editorial.png","tags":["Amazon EC2","Amazon EC2 Bare Metal","Compute","MacOS","open source","Technical How-To"]},{"title":"Learn how to integrate AWS services with the Serverless Patterns Collection | AWS Compute Blog","intro":"The recently launched Serverless Patterns Collection is a repository of serverless examples that demonstrate integrating two or more AWS services. Each pattern uses either the AWS Serverless Application Model (AWS SAM) or AWS Cloud Development Kit (AWS CDK). These simplify the creation and configuration of the services referenced. The Serverless Patterns Collection is both an educational […]","author":"Talia Nassi","date":"May 10, 2021","link":"https://aws.amazon.com/blogs/compute/learn-how-to-integrate-aws-services-with-the-serverless-patterns-collection/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/05/07/2021-05-04_10-49-50-925x630.png","tags":["AWS Cloud Development Kit","AWS CloudFormation","AWS Serverless Application Model","Serverless","serverless"]},{"title":"Operating Lambda: Performance optimization – Part 3 | AWS Compute Blog","intro":"This post is the final part in a 3-part series on performance optimization in Lambda. The Lambda service makes frequent performance improvements in the underlying hardware, software, and architecture of the service. This post identifies the parts of the Lambda lifecycle where developers can make the most impact on performance.","author":"James Beswick","date":"May 10, 2021","link":"https://aws.amazon.com/blogs/compute/operating-lambda-performance-optimization-part-3/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/12/perf3-1.png","tags":["AWS Lambda","Best Practices","Serverless","serverless"]},{"title":"Using shared memory for low-latency, intra-node communication in AWS Batch | AWS Compute Blog","intro":"In this post, I show how the new shared memory support in AWS Batch is able to improve performance while decreasing the latency of the intra-node communication. This performance gain can also lower the cost of running jobs overall.","author":"James Beswick","date":"May 06, 2021","link":"https://aws.amazon.com/blogs/compute/using-shared-memory-for-low-latency-intra-node-communication-in-aws-batch/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2020/10/22/batch4-853x630.jpg","tags":["Amazon EC2","AWS Batch","Serverless","contributed","serverless"]},{"title":"Operating Lambda: Performance optimization – Part 2 | AWS Compute Blog","intro":"This post is the second in a 3-part series on performance optimization in Lambda. It explains the effect of the memory configuration on Lambda performance, and why the memory setting also controls the compute power and networking I/O available to a function.","author":"James Beswick","date":"May 04, 2021","link":"https://aws.amazon.com/blogs/compute/operating-lambda-performance-optimization-part-2/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/12/perf2-1-1170x630.png","tags":["AWS Lambda","Best Practices","Serverless","serverless"]},{"title":"Better together: AWS SAM and AWS CDK | AWS Compute Blog","intro":"Today AWS is announcing the public preview of AWS Serverless Application Model CLI (AWS SAM CLI) support for local development and testing of AWS Cloud Development Kit (AWS CDK) projects. AWS SAM and AWS CDK are both open-source frameworks for building applications using infrastructure as code (IaC). AWS SAM is template-based using JSON or YAML, […]","author":"Eric Johnson","date":"Apr 29, 2021","link":"https://aws.amazon.com/blogs/compute/better-together-aws-sam-and-aws-cdk/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/29/better-together.png","tags":["AWS Cloud Development Kit","AWS Serverless Application Model","Serverless","serverless"]},{"title":"Architecting for DR on AWS Outposts with CloudEndure | AWS Compute Blog","intro":"This post is written by Scott Howe – Sr. Secure Hybrid Edge Solutions Architect and Schneider Larbi – Sr. Partner Solutions Architect (VMware & Outposts) AWS Outposts is a fully managed offering that extends AWS infrastructure into your data center to facilitate workloads requiring local processing, data residency, minimal application latency, and 2-step migration journeys.  Due […]","author":"Emma White","date":"Apr 28, 2021","link":"https://aws.amazon.com/blogs/compute/architecting-for-dr-on-aws-outposts-with-cloudendure/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/28/outpostspic1.png","tags":["AWS Outposts","CloudEndure Disaster Recovery","Technical How-to","CloudEndure","Disaster Recovery"]},{"title":"Getting Started with AWS Nitro Enclaves on Microsoft Windows | AWS Compute Blog","intro":"This post is written by Scott Malkie, Specialist Solutions Architect, EC2 AWS Nitro Enclaves, introduced in October 2020, are isolated compute environments. They leverage the power of the AWS Nitro System to provide isolation and attestation for sensitive data processing. Customers use Nitro Enclaves to isolate their data processing workloads, even from users with root […]","author":"Martin Yip","date":"Apr 28, 2021","link":"https://aws.amazon.com/blogs/compute/getting-started-with-aws-nitro-enclaves-on-microsoft-windows/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/28/Site-Merch_Nitro-Enclaves_SocialMedia_2.png","tags":["Amazon EC2","Compute","Security","Windows on AWS","Confidential Computing","Nitro Enclaves","Nitro System","Trusted Computing","Windows"]},{"title":"Operating Lambda: Performance optimization – Part 1 | AWS Compute Blog","intro":"This post is the first in a 3-part series on performance optimization in Lambda. It explains how the Lambda execution environment works and why cold starts occur.","author":"James Beswick","date":"Apr 26, 2021","link":"https://aws.amazon.com/blogs/compute/operating-lambda-performance-optimization-part-1/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/12/performance4.png","tags":["AWS Lambda","Best Practices","Serverless","serverless"]},{"title":"Getting started with serverless for developers: Part 3 – The front door | AWS Compute Blog","intro":"This blog post is part 3 of Getting started with serverless for developers, helping developers to start building serverless applications from their IDE. In the previous post, I introduce AWS Lambda and show how functions are designed to run business logic for serverless applications. In this blog post, you see how to access that business […]","author":"Benjamin Smith","date":"Apr 26, 2021","link":"https://aws.amazon.com/blogs/compute/getting-started-with-serverless-for-developers-part-3-the-front-door/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/26/Screenshot-2021-04-09-at-14.28.28.png","tags":["Amazon API Gateway","AWS Lambda","AWS Serverless Application Model","Foundational (100)","Serverless","serverless"]},{"title":"Getting Started with Anka on EC2 Mac Instances | AWS Compute Blog","intro":"This post is written by Scott Malkie, Specialist Solutions Architect, EC2 At re:Invent 2020, we announced Amazon EC2 Mac instances, which enable you to run on-demand macOS workloads in the AWS Cloud for the first time. Apple developers can now benefit from the scalability, elasticity, reliability, and security of the AWS Cloud and the AWS […]","author":"Martin Yip","date":"Apr 21, 2021","link":"https://aws.amazon.com/blogs/compute/getting-started-with-anka-on-ec2-mac-instances/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/20/Site-Merch_EC2-Mac_Editorial.png","tags":["Amazon EC2","Amazon EC2 Bare Metal"]},{"title":"Modelling workflow input and output path processing with data flow simulator | AWS Compute Blog","intro":"AWS Step Functions recently introduced a new data flow simulator to model input and output path processing. This new feature makes it easier to evaluate JSON-based input and output data as it passes through a state, helping to build workflows faster. Developers build Step Functions workflows to orchestrate multiple services into business-critical applications with minimal […]","author":"Benjamin Smith","date":"Apr 20, 2021","link":"https://aws.amazon.com/blogs/compute/modeling-workflow-input-output-path-processing-with-data-flow-simulator/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/19/input-output-processing-959x630.png","tags":["AWS Step Functions","Serverless","serverless"]},{"title":"Optimizing serverless development with samconfig | AWS Compute Blog","intro":"The AWS Serverless Application Model (AWS SAM) is an open-source framework for building serverless applications using infrastructure as code (IaC). Using shorthand syntax, developers declare AWS CloudFormation resources or specialized serverless resources that are transformed to infrastructure during deployment. AWS SAM commands list AWS SAM’s companion, the AWS SAM Command Line Interface (CLI), provides a […]","author":"Eric Johnson","date":"Apr 19, 2021","link":"https://aws.amazon.com/blogs/compute/optimizing-serverless-development-with-samconfig/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/19/Untitled-2_01.png","tags":["AWS Serverless Application Model","Serverless","serverless"]},{"title":"Getting started with serverless for developers: Part 2 – The business logic | AWS Compute Blog","intro":"This blog is part 2 of “Getting started with serverless for developers“, helping developers start building serverless applications from their IDE. In part 1 you learn why developers need serverless technologies and which challenges serverless technologies help to solve. You are introduced to an example serverless application. Deploying this application to your AWS account in […]","author":"Benjamin Smith","date":"Apr 19, 2021","link":"https://aws.amazon.com/blogs/compute/getting-started-with-serverless-for-developers-part-2-the-business-logic/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/19/Screenshot-2021-04-19-at-12.25.34-1117x630.png","tags":["AWS Lambda","AWS Serverless Application Model","Foundational (100)","Serverless","serverless"]},{"title":"Introducing cross-Region event routing with Amazon EventBridge | AWS Compute Blog","intro":"With cross-Region event routing in EventBridge, you can now route events from any AWS Region to other supported Regions. This post explains how to configure cross-Region event routing in the console and CLI and explains how to restrict access to routing capabilities. Finally, I walk through an example you can deploy to your AWS account.","author":"James Beswick","date":"Apr 15, 2021","link":"https://aws.amazon.com/blogs/compute/introducing-cross-region-event-routing-with-amazon-eventbridge/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/12/crossregion1.png","tags":["Amazon EventBridge","Serverless","serverless"]},{"title":"Controlling concurrency in distributed systems using AWS Step Functions | AWS Compute Blog","intro":"In this blog post, you learn how to control concurrency in a distributed system. You implement a semaphore using Step Functions and DynamoDB Conditional Expressions. Finally, you use EventBridge to trigger lock cleanup when you encounter failure.","author":"James Beswick","date":"Apr 14, 2021","link":"https://aws.amazon.com/blogs/compute/controlling-concurrency-in-distributed-systems-using-aws-step-functions/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/08/semaphore4-747x630.png","tags":["AWS Lambda","AWS Step Functions","Serverless","contributed","serverless"]},{"title":"Register now for the Serverless Live virtual event | AWS Compute Blog","intro":"The AWS Serverless team is excited to bring you the second annual serverless-first event, Serverless Live, on May 19. We’ll be livestreaming technical deep dives, demos, and live Q&A to help you get the most out of the cloud. The event opens with a keynote by Adrian Cockcroft, VP of Sustainability Architecture. It’s followed by […]","author":"Jaclyn Iulianetti","date":"Apr 13, 2021","link":"https://aws.amazon.com/blogs/compute/register-now-for-the-serverless-live-virtual-event/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/13/Social-Asset-2-1235x630.png","tags":["Announcements","Serverless","serverless"]},{"title":"Getting started with serverless for developers: Part 1 | AWS Compute Blog","intro":"Update : You can now find the supporting GitHub repository to this series. Part 2: The business logic Part 3: The front door Developers around the world are already running serverless applications in production without worrying about servers. This new getting started series is for developers who want to join them. Follow along with blog […]","author":"Benjamin Smith","date":"Apr 12, 2021","link":"https://aws.amazon.com/blogs/compute/getting-started-with-serverless-for-developers-part-1/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/04/12/gettingstarted-developer-1116x630.png","tags":["AWS Lambda","AWS Serverless Application Model","Foundational (100)","Serverless","serverless"]},{"title":"Operating Lambda: Isolating and resolving issues | AWS Compute Blog","intro":"This blog post outlines a general approach to debugging Lambda performance issues and errors. This provides a repeatable process for isolating and resolving problems in your serverless workloads. Using the walkthrough of the Coffee Lookup application, I show how to reproduce a production bug, isolate the cause of errors, and then isolate the performance issue.","author":"James Beswick","date":"Apr 12, 2021","link":"https://aws.amazon.com/blogs/compute/operating-lambda-isolating-and-resolving-issues/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/03/29/resolving3-1171x630.png","tags":["Amazon CloudWatch","AWS Lambda","AWS X-Ray","Best Practices","Serverless","serverless"]},[{"title":"Introducing AWS X-Ray new integration with AWS Step Functions | AWS Compute Blog","intro":"AWS Step Functions now integrates with AWS X-Ray to provide a comprehensive tracing experience for serverless orchestration workflows. Step Functions allows you to build resilient serverless orchestration workflows with AWS services such as AWS Lambda, Amazon SNS, Amazon DynamoDB, and more. Step Functions provides a history of executions for a given state machine in the AWS […]","author":"Benjamin Smith","date":"Sep 14, 2020","link":"https://aws.amazon.com/blogs/compute/introducing-aws-x-ray-new-integration-with-aws-step-functions/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2020/08/28/1-serviceMap-967x630.png","tags":["Application Services","AWS Step Functions","AWS X-Ray","Developer Tools","Serverless","AWS Lambda","serverless"]},{"title":"The serverless LAMP stack part 6: From MVC to serverless microservices","intro":"In this post, you learn how to build serverless PHP applications using microservices. I show how to move from using a single Lambda function as scalable web host with an MVC framework, to a decoupled microservice model. The accompanying code examples for this blog post can be found in this GitHub repository.[…]","author":"Benjamin Smith","date":"Oct 6, 2020","link":"https://aws.amazon.com/blogs/compute/the-serverless-lamp-stack-part-6-from-mvc-to-serverless-microservices/","image":"https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2020/10/02/Screenshot-2020-10-01-at-11.25.55.png","tags":["Interactive workloads","PHP","LAMP","Amazon API Gateway","Amazon API Gateway","Amazon Aurora","Amazon RDS","AWS Lambda","AWS PHP Development","AWS SDK for PHP","Developer Tools","DevOps","Programing Language","RDS for MySQL"]}]]]]]]]]